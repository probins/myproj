{"version":3,"file":"tmerc.js","sources":["../../../proj4js/lib/common/pj_enfn.js","../../../proj4js/lib/common/pj_mlfn.js","../../../proj4js/lib/projections/tmerc.js","../../../proj4js/lib/common/pj_inv_mlfn.js","../../projections/tmerc.js"],"sourcesContent":["var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","import tmerc from '../../proj4js/lib/projections/tmerc.js';\nimport projections from '../../proj4js/lib/projections.js';\n\nprojections.add(tmerc);\n"],"names":["C08","phi","sphi","cphi","en","init","this","x0","undefined","y0","long0","lat0","es","t","pj_enfn","ml0","pj_mlfn","Math","sin","cos","forward","p","con","x","y","lon","lat","delta_lon","adjust_lon","sin_phi","cos_phi","al","als","pow","c","ep2","cs","tq","abs","EPSLN","tan","ts","sqrt","ml","a","k0","b","log","acos","inverse","arg","k","i","s","pj_inv_mlfn","HALF_PI","tan_phi","d","ds","sign","f","exp","g","temp","h","asin","atan2","names","projections","add","tmerc"],"mappings":"kJAAA,IAIIA,EAAM,gBCJK,WAASC,EAAKC,EAAMC,EAAMC,GAGvC,OAFAD,GAAQD,EACRA,GAAQA,EACAE,EAAG,GAAKH,EAAME,GAAQC,EAAG,GAAKF,GAAQE,EAAG,GAAKF,GAAQE,EAAG,GAAKF,EAAOE,EAAG,MCmK3E,MACQ,CACbC,KA7JK,WACLC,KAAKC,QAAiBC,IAAZF,KAAKC,GAAmBD,KAAKC,GAAK,EAC5CD,KAAKG,QAAiBD,IAAZF,KAAKG,GAAmBH,KAAKG,GAAK,EAC5CH,KAAKI,WAAuBF,IAAfF,KAAKI,MAAsBJ,KAAKI,MAAQ,EACrDJ,KAAKK,UAAqBH,IAAdF,KAAKK,KAAqBL,KAAKK,KAAO,EAE9CL,KAAKM,KACPN,KAAKF,GFLM,SAASQ,GACtB,IAAIR,EAAK,GACTA,EAAG,GAfK,EAeMQ,GAdN,IAckBA,GAblB,QAa8BA,GAZ9B,UAY0CA,EAAKZ,KACvDI,EAAG,GAAKQ,GAXA,IAWYA,GAdZ,QAcwBA,GAbxB,UAaoCA,EAAKZ,KACjD,IAAIa,EAAID,EAAKA,EAKb,OAJAR,EAAG,GAAKS,GAZA,OAYWD,GAXX,oBACA,oBAUuBA,IAC/BC,GAAKD,EACLR,EAAG,GAAKS,GAXA,kBACA,oBAUWD,GACnBR,EAAG,GAAKS,EAAID,EAVJ,YAWDR,EEJKU,CAAQR,KAAKM,IACvBN,KAAKS,IAAMC,EAAQV,KAAKK,KAAMM,KAAKC,IAAIZ,KAAKK,MAAOM,KAAKE,IAAIb,KAAKK,MAAOL,KAAKF,MAsJ/EgB,QA9IK,SAAiBC,GACtB,IAIIC,EACAC,EAAGC,EALHC,EAAMJ,EAAEE,EACRG,EAAML,EAAEG,EAERG,EAAYC,EAAWH,EAAMnB,KAAKI,OAGlCmB,EAAUZ,KAAKC,IAAIQ,GACnBI,EAAUb,KAAKE,IAAIO,GAEvB,GAAKpB,KAAKM,GA8BL,CACH,IAAImB,EAAKD,EAAUH,EACfK,EAAMf,KAAKgB,IAAIF,EAAI,GACnBG,EAAI5B,KAAK6B,IAAMlB,KAAKgB,IAAIH,EAAS,GACjCM,EAAKnB,KAAKgB,IAAIC,EAAG,GACjBG,EAAKpB,KAAKqB,IAAIR,GAAWS,EAAQtB,KAAKuB,IAAId,GAAO,EACjDb,EAAII,KAAKgB,IAAII,EAAI,GACjBI,EAAKxB,KAAKgB,IAAIpB,EAAG,GACrBS,EAAM,EAAIhB,KAAKM,GAAKK,KAAKgB,IAAIJ,EAAS,GACtCE,GAAUd,KAAKyB,KAAKpB,GACpB,IAAIqB,EAAK3B,EAAQU,EAAKG,EAASC,EAASxB,KAAKF,IAE7CmB,EAAIjB,KAAKsC,GAAKtC,KAAKuC,GAAKd,GAAM,EAC5BC,EAAM,GAAK,EAAInB,EAAIqB,EACnBF,EAAM,IAAM,EAAI,GAAKnB,EAAI4B,EAAK,GAAKP,EAAI,GAAKrB,EAAIqB,EAChDF,EAAM,IAAM,GAAK,IAAMS,EAAKA,EAAK5B,EAAI,IAAMA,OAC3CP,KAAKC,GAEPiB,EAAIlB,KAAKsC,GAAKtC,KAAKuC,IAAMF,EAAKrC,KAAKS,IACjCc,EAAUF,EAAYI,EAAK,GAAK,EAChCC,EAAM,IAAM,EAAInB,EAAI,EAAIqB,EAAI,EAAIE,EAChCJ,EAAM,IAAM,GAAKS,EAAK,GAAK5B,EAAI,IAAMqB,EAAI,IAAMrB,EAAIqB,EACnDF,EAAM,IAAM,KAAO,IAAMS,EAAKA,EAAK5B,EAAI,KAAOA,QAC9CP,KAAKG,OArDK,CACZ,IAAIqC,EAAIhB,EAAUb,KAAKC,IAAIS,GAE3B,GAAKV,KAAKqB,IAAIrB,KAAKqB,IAAIQ,GAAK,GAAMP,EAChC,UAOA,GAJAhB,EAAI,GAAMjB,KAAKsC,EAAItC,KAAKuC,GAAK5B,KAAK8B,KAAK,EAAID,IAAM,EAAIA,IAAMxC,KAAKC,GAChEiB,EAAIM,EAAUb,KAAKE,IAAIQ,GAAaV,KAAKyB,KAAK,EAAIzB,KAAKgB,IAAIa,EAAG,KAC9DA,EAAI7B,KAAKqB,IAAId,KAEJ,EAAG,CACV,GAAKsB,EAAI,EAAKP,EACZ,UAGAf,EAAI,OAINA,EAAIP,KAAK+B,KAAKxB,GAGZE,EAAM,IACRF,GAAKA,GAGPA,EAAIlB,KAAKsC,EAAItC,KAAKuC,IAAMrB,EAAIlB,KAAKK,MAAQL,KAAKG,GAgClD,OAHAY,EAAEE,EAAIA,EACNF,EAAEG,EAAIA,EAECH,GA0EP4B,QApEK,SAAiB5B,GACtB,IAAIC,EAAKrB,EACLyB,EAAKD,EACLF,GAAKF,EAAEE,EAAIjB,KAAKC,KAAO,EAAID,KAAKsC,GAChCpB,GAAKH,EAAEG,EAAIlB,KAAKG,KAAO,EAAIH,KAAKsC,GAEpC,GAAKtC,KAAKM,GAuBR,GAFAX,EC5HW,SAASiD,EAAKtC,EAAIR,GAG/B,IAFA,IAAI+C,EAAI,GAAK,EAAIvC,GACbX,EAAMiD,EACDE,EALI,GAKUA,IAAKA,EAAG,CAC7B,IAAIC,EAAIpC,KAAKC,IAAIjB,GACbY,EAAI,EAAID,EAAKyC,EAAIA,EAKrB,GADApD,GADAY,GAAKG,EAAQf,EAAKoD,EAAGpC,KAAKE,IAAIlB,GAAMG,GAAM8C,IAAQrC,EAAII,KAAKyB,KAAK7B,IAAMsC,EAElElC,KAAKqB,IAAIzB,GAAK0B,EAChB,OAAOtC,EAIX,OAAOA,ED6GCqD,CADNhC,EAAMhB,KAAKS,IAAMS,EAAIlB,KAAKuC,GACHvC,KAAKM,GAAIN,KAAKF,IAEjCa,KAAKqB,IAAIrC,GAAOsD,EAAS,CAC3B,IAAI1B,EAAUZ,KAAKC,IAAIjB,GACnB6B,EAAUb,KAAKE,IAAIlB,GACnBuD,EAAUvC,KAAKqB,IAAIR,GAAWS,EAAQtB,KAAKuB,IAAIvC,GAAO,EACtDiC,EAAI5B,KAAK6B,IAAMlB,KAAKgB,IAAIH,EAAS,GACjCM,EAAKnB,KAAKgB,IAAIC,EAAG,GACjBrB,EAAII,KAAKgB,IAAIuB,EAAS,GACtBf,EAAKxB,KAAKgB,IAAIpB,EAAG,GACrBS,EAAM,EAAIhB,KAAKM,GAAKK,KAAKgB,IAAIJ,EAAS,GACtC,IAAI4B,EAAIlC,EAAIN,KAAKyB,KAAKpB,GAAOhB,KAAKuC,GAC9Ba,EAAKzC,KAAKgB,IAAIwB,EAAG,GAGrB/B,EAAMzB,GAFNqB,GAAYkC,GAEOE,GAAM,EAAIpD,KAAKM,IAAO,IAAO,EAC9C8C,EAAK,IAAM,EAAI,EAAI7C,EAAI,EAAIqB,EAAIrB,EAAIqB,EAAI,EAAIE,EAC3CsB,EAAK,IAAM,GAAK,GAAK7C,EAAI,IAAMqB,EAAIrB,EAAI,GAAK4B,EAAK,GAAKP,EACtDwB,EAAK,IAAM,KAAO,KAAO7C,EAAI,KAAO4B,EAAK,KAAOA,EAAK5B,MAEvDY,EAAMG,EAAWtB,KAAKI,MAAS+C,GAAK,EAClCC,EAAK,GAAK,EAAI,EAAI7C,EAAIqB,EACtBwB,EAAK,IAAM,EAAI,GAAK7C,EAAI,GAAK4B,EAAK,EAAIP,EAAIrB,EAAI,EAAIqB,EAClDwB,EAAK,IAAM,GAAK,IAAM7C,EAAI,KAAO4B,EAAK,IAAMA,EAAK5B,MAAQiB,QAG3DJ,EAAM6B,EAAUI,EAAKnC,GACrBC,EAAM,MAhDI,CACZ,IAAImC,EAAI3C,KAAK4C,IAAItC,EAAIjB,KAAKuC,IACtBiB,EAAI,IAAOF,EAAI,EAAIA,GACnBG,EAAOzD,KAAKK,KAAOa,EAAIlB,KAAKuC,GAC5BmB,EAAI/C,KAAKE,IAAI4C,GACjBzC,EAAML,KAAKyB,MAAM,EAAIzB,KAAKgB,IAAI+B,EAAG,KAAO,EAAI/C,KAAKgB,IAAI6B,EAAG,KACxDpC,EAAMT,KAAKgD,KAAK3C,GAEZE,EAAI,IACNE,GAAOA,GAIPD,EADS,IAANqC,GAAmB,IAANE,EACV,EAGApC,EAAWX,KAAKiD,MAAMJ,EAAGE,GAAK1D,KAAKI,OAuC7C,OAHAW,EAAEE,EAAIE,EACNJ,EAAEG,EAAIE,EAECL,GAQP8C,MALiB,CAAC,sBAAuB,sBAAuB,UEnKlEC,EAAYC,IAAIC"}