{"version":3,"file":"laea.js","sources":["../../../proj4js/lib/common/qsfnz.js","../../../proj4js/lib/projections/laea.js","../../projections/laea.js"],"sourcesContent":["export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","import laea from '../../proj4js/lib/projections/laea.js';\nimport projections from '../../proj4js/lib/projections.js';\n\nprojections.add(laea);\n"],"names":["eccent","sinphi","con","Math","log","init","t","abs","this","lat0","HALF_PI","EPSLN","mode","S_POLE","N_POLE","EQUIT","OBLIQ","es","qp","qsfnz","e","mmf","apa","APA","authset","dd","rq","sqrt","xmf","ymf","sin","sinb1","cosb1","cos","sinph0","cosph0","forward","p","x","y","coslam","sinlam","q","sinb","cosb","b","cosphi","lam","phi","adjust_lon","long0","sphere","FORTPI","a","x0","y0","inverse","cCe","sCe","rho","ab","beta","rh","cosz","sinz","asin","atan2","names","projections","add","laea"],"mappings":"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"}