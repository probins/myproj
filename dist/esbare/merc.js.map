{"version":3,"file":"merc.js","sources":["../../../proj4js/lib/projections/merc.js","../../projections/merc.js"],"sourcesContent":["import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import merc from '../../proj4js/lib/projections/merc.js';\nimport projections from '../../proj4js/lib/projections.js';\n\nprojections.add(merc);\n"],"names":["init","con","this","b","a","es","x0","y0","e","Math","sqrt","lat_ts","sphere","k0","cos","msfnz","sin","k","forward","p","x","y","lon","lat","R2D","abs","HALF_PI","EPSLN","adjust_lon","long0","log","tan","FORTPI","sinphi","ts","tsfnz","inverse","atan","exp","phi2z","names","projections","add","merc"],"mappings":"yMA6FO,MACQ,CACbA,KAzFK,WACL,IAAIC,EAAMC,KAAKC,EAAID,KAAKE,EACxBF,KAAKG,GAAK,EAAIJ,EAAMA,EACf,OAAQC,OACXA,KAAKI,GAAK,GAEP,OAAQJ,OACXA,KAAKK,GAAK,GAEZL,KAAKM,EAAIC,KAAKC,KAAKR,KAAKG,IACpBH,KAAKS,OACHT,KAAKU,OACPV,KAAKW,GAAKJ,KAAKK,IAAIZ,KAAKS,QAGxBT,KAAKW,GAAKE,EAAMb,KAAKM,EAAGC,KAAKO,IAAId,KAAKS,QAASF,KAAKK,IAAIZ,KAAKS,SAI1DT,KAAKW,KACJX,KAAKe,EACPf,KAAKW,GAAKX,KAAKe,EAGff,KAAKW,GAAK,IAkEhBK,QAzDK,SAAiBC,GACtB,IAOIC,EAAGC,EAPHC,EAAMH,EAAEC,EACRG,EAAMJ,EAAEE,EAEZ,GAAIE,EAAMC,EAAM,IAAMD,EAAMC,GAAO,IAAMF,EAAME,EAAM,KAAOF,EAAME,GAAO,IACvE,OAAO,KAIT,GAAIf,KAAKgB,IAAIhB,KAAKgB,IAAIF,GAAOG,IAAYC,EACvC,OAAO,KAGP,GAAIzB,KAAKU,OACPQ,EAAIlB,KAAKI,GAAKJ,KAAKE,EAAIF,KAAKW,GAAKe,EAAWN,EAAMpB,KAAK2B,OACvDR,EAAInB,KAAKK,GAAKL,KAAKE,EAAIF,KAAKW,GAAKJ,KAAKqB,IAAIrB,KAAKsB,IAAIC,EAAS,GAAMT,QAE/D,CACH,IAAIU,EAASxB,KAAKO,IAAIO,GAClBW,EAAKC,EAAMjC,KAAKM,EAAGe,EAAKU,GAC5Bb,EAAIlB,KAAKI,GAAKJ,KAAKE,EAAIF,KAAKW,GAAKe,EAAWN,EAAMpB,KAAK2B,OACvDR,EAAInB,KAAKK,GAAKL,KAAKE,EAAIF,KAAKW,GAAKJ,KAAKqB,IAAII,GAI5C,OAFAf,EAAEC,EAAIA,EACND,EAAEE,EAAIA,EACCF,GAiCTiB,QA3BK,SAAiBjB,GAEtB,IAEIG,EAAKC,EAFLH,EAAID,EAAEC,EAAIlB,KAAKI,GACfe,EAAIF,EAAEE,EAAInB,KAAKK,GAGnB,GAAIL,KAAKU,OACPW,EAAMG,EAAU,EAAIjB,KAAK4B,KAAK5B,KAAK6B,KAAKjB,GAAKnB,KAAKE,EAAIF,KAAKW,UAExD,CACH,IAAIqB,EAAKzB,KAAK6B,KAAKjB,GAAKnB,KAAKE,EAAIF,KAAKW,KAEtC,IAAa,QADbU,EAAMgB,EAAMrC,KAAKM,EAAG0B,IAElB,OAAO,KAOX,OAJAZ,EAAMM,EAAW1B,KAAK2B,MAAQT,GAAKlB,KAAKE,EAAIF,KAAKW,KAEjDM,EAAEC,EAAIE,EACNH,EAAEE,EAAIE,EACCJ,GAQPqB,MALiB,CAAC,WAAY,wCAAyC,eAAgB,4BAA6B,SC1FtHC,EAAYC,IAAIC"}