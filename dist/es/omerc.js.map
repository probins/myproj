{"version":3,"file":"omerc.js","sources":["../../../proj4js/lib/projections/omerc.js","../../projections/omerc.js"],"sourcesContent":["import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import omerc from '../../proj4js/lib/projections/omerc.js';\nimport proj4 from '../../proj4js/lib/index.js';\n\nproj4.Proj.projections.add(omerc);\n"],"names":["init","this","no_off","no_rot","isNaN","k0","sinlat","Math","sin","lat0","coslat","cos","con","e","bl","sqrt","es","pow","al","a","fl","gl","t0","tsfnz","dl","longc","t1","lat1","t2","lat2","el","hl","ll","jl","pl","dlon12","adjust_lon","long1","long2","long0","atan","tan","dlon10","gamma0","alpha","asin","uc","atan2","forward","p","us","vs","lon","x","lat","y","dlon","abs","HALF_PI","EPSLN","log","FORTPI","t","ql","sl","tl","vl","ul","Number","POSITIVE_INFINITY","x0","y0","inverse","qp","exp","sp","tp","vp","up","ts","phi2z","names","proj4","Proj","projections","add","omerc"],"mappings":"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"}